draggable(v-model='state.groups', handle='.group-handle')
    .group(:class="{'selected-group' : merge.includes(group.id)}" 
        v-for="group in filteredGroups" 
        :data-id='group.id')
        
        //- Group header
        .valign-wrapper.header
            img.group-handle(src="img/drag_group.png", alt="")
            input.browser-default.editor(v-model='group.title', 
                                  :placeholder='group.title', 
                                  v-if='updateGroupID == group.id', 
                                  @keyup.enter="updateGroupID = ''", 
                                  @blur="updateGroupID = ''", 
                                  v-focus, v-resizable, type='text')
            h5.unselectable(@dblclick='updateGroupID = group.id', v-else='') {{group.title}}
            i.tiny.material-icons.edit(@click='updateGroupID = group.id') edit
            //- Select Button
            a.selectbtn.waves-effect.waves-light.btn-small.orange.lighten-2(@click='addToMerge($event, group.id)') Select
            
            //- Choose Tags Dropdown
            .dropdown
                .show-more(@click='showTagMenu')
                    i.unselectable.tiny.white-text.material-icons details
                .dropdown-content
                    .unselectable.tag(@click='toggleTagInGroup(group.id, tag.id)', v-for='tag in state.tags')
                        transition(name='slide-fade-x')
                            i.tiny.material-icons(v-if='group.tags.includes(tag.id)') check
                        span {{tag.title}}
                    input(placeholder='NEW TAG...', @keyup.enter='addTag', type='text')
        
        .valign-wrapper.header
            //- Group Header Actions
            h6.unselectable {{ group.tabs.length }} tabs
            span.header-action.clickable.unselectable(@click='deleteGroup(group.id)') Delete Group
            span.header-action.clickable.unselectable(@click='openAlltabs(group.id)') Open all tabs
            //- span.header-action.clickable.unselectable(@click='archiveGroup(group.id)') Archive Group
            span.date Created on {{group.date}}
        
        //- Group Description
        .description
            input.browser-default.editor(v-model='group.description', 
                                    :placeholder='group.description', 
                                    v-if='updateGroupDescription == group.id', 
                                    @keyup.enter="updateGroupDescription = ''", 
                                    @blur="updateGroupDescription = ''", 
                                    v-focus, v-resizable, type='text')
            h6.unselectable.descriptionText(@dblclick='updateGroupDescription = group.id', v-else) {{group.description}}
            i.tiny.material-icons.edit(@click='updateGroupDescription = group.id') edit
        
        //- Tabs
        include tab